from typing import TYPE_CHECKING

from sunflare.engine.exengine import (
    {{ plugin_base }}
)

if TYPE_CHECKING:
    from sunflare.config import MotorModelInfo
    {%- if not plugin_mm_support -%}
    import numpy.typing as npt

    {%- endif -%}
    {%- if not plugin_mm_support and plugin_base == 'ExEngineDoubleMotorModel' -%}
    from typing import Any, Tuple


    {%- elif not plugin_mm_support and plugin_base == 'ExEngineSingleMotorModel' -%}
    from typing import Any


    {%- endif -%}
class MyMotor({{ plugin_base }}):
    def __init__(self, name: str, model_info: "MotorModelInfo") -> None:
        
        # in this function, initialize your detector API via
        # whatever python package it uses; after initializing a detector,
        # define the initial exposure time for your detector
        super().__init__(name, model_info)
    
    {%- if not mm_support and plugin_base == 'ExEngineSingleMotorModel' -%}
    def set_position(self, position: float) -> None: 
        # implement
        raise NotImplementedError

    def get_position(self) -> float:
        # implement
        raise NotImplementedError

    def set_position_sequence(self, positions: "npt.NDArray[Any]") -> None:
        # implement
        raise NotImplementedError

    def get_triggerable_position_sequence_max_length(self) -> int:
        # implement
        raise NotImplementedError

    def stop_position_sequence(self) -> None:
        # implement
        raise NotImplementedError
    {%- elif not mm_support and plugin_base == 'ExEngineDoubleMotorModel' -%}
    def set_position(self, x: float, y: float) -> None:
        # implement
        raise NotImplementedError

    def get_position(self) -> "Tuple[float, float]":
        # implement
        raise NotImplementedError

    def set_position_sequence(self, positions: "npt.NDArray[Any]") -> None:
        # implement
        raise NotImplementedError

    def get_triggerable_position_sequence_max_length(self) -> int:
        # implement
        raise NotImplementedError

    def stop_position_sequence(self) -> None:
        # implement
        raise NotImplementedError
    {%- endif -%}
{% endif %}