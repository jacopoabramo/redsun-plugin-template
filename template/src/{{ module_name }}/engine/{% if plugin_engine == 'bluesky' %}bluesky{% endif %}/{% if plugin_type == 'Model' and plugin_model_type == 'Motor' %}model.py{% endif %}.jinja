from __future__ import annotations

from typing import TYPE_CHECKING

from sunflare.engine.bluesky import (
    {{ plugin_base }},
    Status
)

if TYPE_CHECKING:
    from typing import Union

    from sunflare.config import MotorModelInfo
    from sunflare.types import AxisLocation


class {{ class_baseline }}({{ plugin_base }}):
    def __init__(self, name: str, model_info: MotorModelInfo) -> None:
        
        # in this function, initialize your detector API via
        # whatever python package it uses; after initializing a detector,
        # define the initial exposure time for your detector
        super().__init__(name, model_info)

    def shutdown(self) -> None:
        """Shutdown the motor.

        Optional method.
        Implement this to for graceful shutdown.
        """
        raise NotImplementedError()

    def set(self, value: AxisLocation[Union[float, int, str]]) -> Status:
        """Return a ``Status`` that is marked done when the device is done moving."""
        raise NotImplementedError()

    def locate(self) -> AxisLocation[Union[float, int, str]]:
        """Return the current location of a Device.

        While a ``Readable`` reports many values, a ``Movable`` will have the
        concept of location. This is where the Device currently is, and where it
        was last requested to move to. This protocol formalizes how to get the
        location from a ``Movable``.
        """
        raise NotImplementedError()

