from typing import TYPE_CHECKING

from sunflare.engine.exengine import (
    {{ plugin_base }}
)

from .config import MyDetectorInfo

if TYPE_CHECKING:

    from typing import Optional, Tuple, Any
    
    import numpy.typing as npt


class {{ class_baseline }}({{ plugin_base }}):
    def __init__(self, name: str, model_info: 'MyDetectorInfo') -> None:

        super().__init__(name, model_info)
    
    {% if mm_support -%} 
    def arm(self, frame_count: "Optional[int]" = None) -> None:  # noqa: D102
        # implement
        super().arm(frame_count)

    def start(self) -> None:  # noqa: D102
        # implement
        super().start()

    def stop(self) -> None:  # noqa: D102
        # implement
        super().stop()

    def is_stopped(self) -> bool:  # noqa: D102
        # implement
        return super().is_stopped()

    def pop_data(  # noqa: D102
        self, timeout: Optional[float] = None
    ) -> "Tuple[npt.NDArray[Any], dict[str, Any]]": 
        # implement
        return super().pop_data(timeout)

    {% else -%}
    def arm(self, frame_count: "Optional[int]" = None) -> None:  # noqa: D102
        # implement
        raise NotImplementedError()

    def start(self) -> None:  # noqa: D102
        # implement
        raise NotImplementedError()

    def stop(self) -> None:  # noqa: D102
        # implement
        raise NotImplementedError()

    def is_stopped(self) -> bool:  # noqa: D102
        # implement
        raise NotImplementedError()

    def pop_data(  # noqa: D102
        self, timeout: Optional[float] = None
    ) -> "Tuple[npt.NDArray[Any], dict[str, Any]]": 
        # implement
        raise NotImplementedError()
    {% endif -%}